{"version":3,"sources":["decorators/injectable.ts"],"names":[],"mappings":";;AACA,qEAAgE;AAGhE;;;;;;;;GAQG;AACH,SAAgB,UAAU,CAAC,WAAoC,EAAE;IAC/D,OAAO,CAAC,OAAkB,EAAE,EAAE;QAC5B,mCAAgB,mBACX,QAAQ,IACX,OAAO,IACP,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAPD,gCAOC","file":"injectable.js","sourcesContent":["import {IProvider} from \"../interfaces\";\nimport {registerProvider} from \"../registries/ProviderRegistry\";\nimport {Type} from \"@tsed/core\";\n\n/**\n * The decorators `@Injectable()` declare a new service can be injected in other service or controller on there `constructor`.\n * All services annotated with `@Injectable()` are constructed one time.\n *\n * > `@Service()` use the `reflect-metadata` to collect and inject service on controllers or other services.\n *\n * @returns {Function}\n * @decorator\n */\nexport function Injectable(provider: Partial<IProvider<any>> = {}): Function {\n  return (provide: Type<any>) => {\n    registerProvider({\n      ...provider,\n      provide\n    });\n  };\n}\n"],"sourceRoot":"../../src"}