{"version":3,"sources":["server/utils/createHttpsServer.ts"],"names":[],"mappings":";;AAAA,+BAA+B;AAE/B,2DAAsD;AAEtD,qDAAwD;AAExD,SAAgB,iBAAiB,CAAC,QAAyB,EAAE,OAA4B;IACvF,MAAM,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAqB,+BAAkB,CAAC,CAAC;IACxE,MAAM,WAAW,GAAQ,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IACjE,qBAAqB;IACrB,0BAA0B;IAC1B,WAAW,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC;IAEpC,QAAQ,CAAC,YAAY,CAAC,yBAAW,EAAE,WAAW,CAAC,CAAC;IAEhD,OAAO,IAAI,CAAC;AACd,CAAC;AAVD,8CAUC","file":"createHttpsServer.js","sourcesContent":["import * as Https from \"https\";\nimport {InjectorService} from \"@tsed/di\";\nimport {HttpsServer} from \"../decorators/httpsServer\";\nimport {IHTTPSServerOptions} from \"../interfaces/IHTTPSServerOptions\";\nimport {ExpressApplication} from \"../../mvc/decorators\";\n\nexport function createHttpsServer(injector: InjectorService, options: IHTTPSServerOptions): Https.Server {\n  const expressApp = injector.get<ExpressApplication>(ExpressApplication);\n  const httpsServer: any = Https.createServer(options, expressApp);\n  // TODO to be removed\n  /* istanbul ignore next */\n  httpsServer.get = () => httpsServer;\n\n  injector.forkProvider(HttpsServer, httpsServer);\n\n  return this;\n}\n"],"sourceRoot":"../../../src"}