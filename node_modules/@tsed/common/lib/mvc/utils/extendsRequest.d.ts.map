{"version":3,"sources":["mvc/utils/extendsRequest.ts"],"names":[],"mappings":"AAEA;;;;GAIG;AACH,wBAAgB,cAAc,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,EAAE,KAAK,CAAC,EAAE,QAAQ,GAAG,GAAG,QAQvE","file":"extendsRequest.d.ts","sourcesContent":["const express = require(\"express\");\n\n/**\n *\n * @param {string | any} obj\n * @param {Function} value\n */\nexport function extendsRequest(obj: string | any, value?: Function | any) {\n  if (typeof obj === \"object\") {\n    Object.keys(obj).forEach(key => {\n      extendsRequest(key, obj[key]);\n    });\n  } else {\n    Object.defineProperty(express.request, obj, typeof value === \"function\" ? {value} : value);\n  }\n}\n\nif (!express.request.setEndpoint) {\n  extendsRequest({\n    /**\n     *\n     */\n    createContainer() {\n      this._container = new Map();\n    },\n    /**\n     *\n     */\n    getContainer() {\n      return this._container;\n    },\n    /**\n     *\n     */\n    destroyContainer() {\n      this._container.forEach((instance: any) => {\n        /* istanbul ignore next */\n        if (instance.$onDestroy) {\n          instance.$onDestroy();\n        }\n      });\n\n      delete this._container;\n    },\n    /**\n     *\n     * @param endpoint\n     */\n    setEndpoint(endpoint: any) {\n      this._endpoint = endpoint;\n    },\n    /**\n     *\n     * @returns {any}\n     */\n    getEndpoint() {\n      return this._endpoint;\n    },\n    /**\n     *\n     */\n    destroyEndpoint() {\n      delete this._endpoint;\n    },\n    /**\n     *\n     * @param data\n     * @returns {storeData}\n     */\n    storeData(data: any) {\n      this._responseData = data;\n\n      return this;\n    },\n    /**\n     *\n     * @returns {any}\n     */\n    getStoredData() {\n      return this._responseData;\n    }\n  });\n}\n"],"sourceRoot":"../../../src"}