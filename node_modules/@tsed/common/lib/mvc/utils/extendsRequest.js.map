{"version":3,"sources":["mvc/utils/extendsRequest.ts"],"names":[],"mappings":";;AAAA,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAEnC;;;;GAIG;AACH,SAAgB,cAAc,CAAC,GAAiB,EAAE,KAAsB;IACtE,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC7B,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;KACJ;SAAM;QACL,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;KAC5F;AACH,CAAC;AARD,wCAQC;AAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE;IAChC,cAAc,CAAC;QACb;;WAEG;QACH,eAAe;YACb,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;QAC9B,CAAC;QACD;;WAEG;QACH,YAAY;YACV,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;QACD;;WAEG;QACH,gBAAgB;YACd,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAa,EAAE,EAAE;gBACxC,0BAA0B;gBAC1B,IAAI,QAAQ,CAAC,UAAU,EAAE;oBACvB,QAAQ,CAAC,UAAU,EAAE,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;QACD;;;WAGG;QACH,WAAW,CAAC,QAAa;YACvB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,CAAC;QACD;;;WAGG;QACH,WAAW;YACT,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;QACD;;WAEG;QACH,eAAe;YACb,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;QACD;;;;WAIG;QACH,SAAS,CAAC,IAAS;YACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,OAAO,IAAI,CAAC;QACd,CAAC;QACD;;;WAGG;QACH,aAAa;YACX,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;KACF,CAAC,CAAC;CACJ","file":"extendsRequest.js","sourcesContent":["const express = require(\"express\");\n\n/**\n *\n * @param {string | any} obj\n * @param {Function} value\n */\nexport function extendsRequest(obj: string | any, value?: Function | any) {\n  if (typeof obj === \"object\") {\n    Object.keys(obj).forEach(key => {\n      extendsRequest(key, obj[key]);\n    });\n  } else {\n    Object.defineProperty(express.request, obj, typeof value === \"function\" ? {value} : value);\n  }\n}\n\nif (!express.request.setEndpoint) {\n  extendsRequest({\n    /**\n     *\n     */\n    createContainer() {\n      this._container = new Map();\n    },\n    /**\n     *\n     */\n    getContainer() {\n      return this._container;\n    },\n    /**\n     *\n     */\n    destroyContainer() {\n      this._container.forEach((instance: any) => {\n        /* istanbul ignore next */\n        if (instance.$onDestroy) {\n          instance.$onDestroy();\n        }\n      });\n\n      delete this._container;\n    },\n    /**\n     *\n     * @param endpoint\n     */\n    setEndpoint(endpoint: any) {\n      this._endpoint = endpoint;\n    },\n    /**\n     *\n     * @returns {any}\n     */\n    getEndpoint() {\n      return this._endpoint;\n    },\n    /**\n     *\n     */\n    destroyEndpoint() {\n      delete this._endpoint;\n    },\n    /**\n     *\n     * @param data\n     * @returns {storeData}\n     */\n    storeData(data: any) {\n      this._responseData = data;\n\n      return this;\n    },\n    /**\n     *\n     * @returns {any}\n     */\n    getStoredData() {\n      return this._responseData;\n    }\n  });\n}\n"],"sourceRoot":"../../../src"}