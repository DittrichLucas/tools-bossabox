{"version":3,"sources":["mvc/components/SendResponseMiddleware.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AACnC,OAAO,EAAC,gBAAgB,EAAC,MAAM,4CAA4C,CAAC;AAI5E,OAAO,EAAC,gBAAgB,EAAC,MAAM,2BAA2B,CAAC;AAE3D,OAAO,EAAC,WAAW,EAAC,MAAM,qBAAqB,CAAC;AAEhD,qBACa,sBAAuB,YAAW,WAAW;IAC5C,SAAS,CAAC,gBAAgB,EAAE,gBAAgB;gBAAlC,gBAAgB,EAAE,gBAAgB;IAEjD,GAAG,CAAiB,IAAI,EAAE,GAAG,EAAc,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAkB,QAAQ,EAAE,gBAAgB;CAqBzH","file":"SendResponseMiddleware.d.ts","sourcesContent":["import * as Express from \"express\";\nimport {ConverterService} from \"../../converters/services/ConverterService\";\nimport {EndpointInfo} from \"../../filters\";\nimport {Response} from \"../../filters/decorators/response\";\nimport {ResponseData} from \"../../filters/decorators/responseData\";\nimport {EndpointMetadata} from \"../class/EndpointMetadata\";\nimport {Middleware} from \"../decorators/class/middleware\";\nimport {IMiddleware} from \"../interfaces/index\";\n\n@Middleware()\nexport class SendResponseMiddleware implements IMiddleware {\n  constructor(protected converterService: ConverterService) {}\n\n  public use(@ResponseData() data: any, @Response() response: Express.Response, @EndpointInfo() endpoint: EndpointMetadata) {\n    const type = typeof data;\n\n    if (endpoint.statusCode === 204) {\n      response.send();\n\n      return;\n    }\n\n    if (data === undefined) {\n      return;\n    }\n\n    if (data === null || [\"number\", \"boolean\", \"string\"].indexOf(type) > -1) {\n      response.send(data && String(data));\n\n      return;\n    }\n\n    response.json(this.converterService.serialize(data));\n  }\n}\n"],"sourceRoot":"../../../src"}