"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const ts_httpexceptions_1 = require("ts-httpexceptions");
const ServerSettingsService_1 = require("../../config/services/ServerSettingsService");
const request_1 = require("../../filters/decorators/request");
const middleware_1 = require("../decorators/class/middleware");
/**
 * @middleware
 */
let GlobalAcceptMimesMiddleware = class GlobalAcceptMimesMiddleware {
    constructor(serverSettingsService) {
        this.serverSettingsService = serverSettingsService;
    }
    use(request) {
        const find = this.serverSettingsService.acceptMimes.find((mime) => request.accepts(mime));
        if (!find) {
            throw new ts_httpexceptions_1.NotAcceptable(this.serverSettingsService.acceptMimes.join(", "));
        }
    }
};
tslib_1.__decorate([
    tslib_1.__param(0, request_1.Request()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], GlobalAcceptMimesMiddleware.prototype, "use", null);
GlobalAcceptMimesMiddleware = tslib_1.__decorate([
    middleware_1.Middleware(),
    tslib_1.__metadata("design:paramtypes", [ServerSettingsService_1.ServerSettingsService])
], GlobalAcceptMimesMiddleware);
exports.GlobalAcceptMimesMiddleware = GlobalAcceptMimesMiddleware;

//# sourceMappingURL=GlobalAcceptMimesMiddleware.js.map
