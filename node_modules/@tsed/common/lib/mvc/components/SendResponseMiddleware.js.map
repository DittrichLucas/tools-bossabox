{"version":3,"sources":["mvc/components/SendResponseMiddleware.ts"],"names":[],"mappings":";;;AAAA,mCAAmC;AACnC,iFAA4E;AAC5E,2CAA2C;AAC3C,gEAA2D;AAC3D,wEAAmE;AACnE,gEAA2D;AAC3D,+DAA0D;AAI1D,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IACjC,YAAsB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAErD,GAAG,CAAiB,IAAS,EAAc,QAA0B,EAAkB,QAA0B;QACtH,MAAM,IAAI,GAAG,OAAO,IAAI,CAAC;QAEzB,IAAI,QAAQ,CAAC,UAAU,KAAK,GAAG,EAAE;YAC/B,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEhB,OAAO;SACR;QAED,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO;SACR;QAED,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;YACvE,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAEpC,OAAO;SACR;QAED,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;CACF,CAAA;AArBC;IAAY,mBAAA,2BAAY,EAAE,CAAA,EAAa,mBAAA,mBAAQ,EAAE,CAAA,EAA8B,mBAAA,sBAAY,EAAE,CAAA;;6DAAW,mCAAgB;;iDAoBvH;AAvBU,sBAAsB;IADlC,uBAAU,EAAE;6CAE6B,mCAAgB;GAD7C,sBAAsB,CAwBlC;AAxBY,wDAAsB","file":"SendResponseMiddleware.js","sourcesContent":["import * as Express from \"express\";\nimport {ConverterService} from \"../../converters/services/ConverterService\";\nimport {EndpointInfo} from \"../../filters\";\nimport {Response} from \"../../filters/decorators/response\";\nimport {ResponseData} from \"../../filters/decorators/responseData\";\nimport {EndpointMetadata} from \"../class/EndpointMetadata\";\nimport {Middleware} from \"../decorators/class/middleware\";\nimport {IMiddleware} from \"../interfaces/index\";\n\n@Middleware()\nexport class SendResponseMiddleware implements IMiddleware {\n  constructor(protected converterService: ConverterService) {}\n\n  public use(@ResponseData() data: any, @Response() response: Express.Response, @EndpointInfo() endpoint: EndpointMetadata) {\n    const type = typeof data;\n\n    if (endpoint.statusCode === 204) {\n      response.send();\n\n      return;\n    }\n\n    if (data === undefined) {\n      return;\n    }\n\n    if (data === null || [\"number\", \"boolean\", \"string\"].indexOf(type) > -1) {\n      response.send(data && String(data));\n\n      return;\n    }\n\n    response.json(this.converterService.serialize(data));\n  }\n}\n"],"sourceRoot":"../../../src"}