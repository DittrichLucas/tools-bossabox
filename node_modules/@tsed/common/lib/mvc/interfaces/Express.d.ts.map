{"version":3,"sources":["mvc/interfaces/Express.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,gBAAgB,EAAC,MAAM,2BAA2B,CAAC;AAE3D,OAAO,CAAC,MAAM,CAAC;IACb,UAAU,OAAO,CAAC;QAChB,UAAiB,YAAa,SAAQ,QAAQ;YAC5C,QAAQ,EAAE,OAAO,CAAC;SACnB;QAED,UAAiB,QAAQ;YACvB,WAAW,EAAE,OAAO,CAAC;SACtB;QAED,UAAiB,WAAW;SAAG;QAE/B,UAAiB,OAAO;YACtB,EAAE,EAAE,MAAM,CAAC;YACX,KAAK,EAAE,MAAM,CAAC;YACd,YAAY,EAAE,IAAI,CAAC;YACnB,QAAQ,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,YAAY,EAAE,aAAa,CAAC,EAAE,GAAG,KAAK,OAAO,CAAC;YAE7H;;eAEG;YACH,YAAY,IAAI,GAAG,CAAC;YAEpB;;eAEG;YACH,eAAe,IAAI,IAAI,CAAC;YAExB;;eAEG;YACH,gBAAgB,IAAI,IAAI,CAAC;YAEzB;;eAEG;YACH,WAAW,IAAI,gBAAgB,CAAC;YAEhC,eAAe,IAAI,IAAI,CAAC;YAExB;;eAEG;YACH,aAAa,IAAI,GAAG,CAAC;YAErB;;;eAGG;YACH,SAAS,CAAC,GAAG,EAAE,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC;YAErC,GAAG,EAAE,aAAa,CAAC;SACpB;QAED,UAAiB,aAAa;YAC5B,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC;YAEzB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC;YAExB,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC;YAEzB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC;YAExB,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC;SAC1B;KACF;CACF","file":"Express.d.ts","sourcesContent":["import {EndpointMetadata} from \"../class/EndpointMetadata\";\n\ndeclare global {\n  namespace Express {\n    export interface NextFunction extends Function {\n      isCalled: boolean;\n    }\n\n    export interface Response {\n      headersSent: boolean;\n    }\n\n    export interface Application {}\n\n    export interface Request {\n      id: string;\n      tagId: string;\n      tsedReqStart: Date;\n      $tryAuth: (request: Express.Request, response: Express.Response, next: Express.NextFunction, authorization?: any) => boolean;\n\n      /**\n       *\n       */\n      getContainer(): any;\n\n      /**\n       *\n       */\n      createContainer(): void;\n\n      /**\n       *\n       */\n      destroyContainer(): void;\n\n      /**\n       *\n       */\n      getEndpoint(): EndpointMetadata;\n\n      destroyEndpoint(): void;\n\n      /**\n       *\n       */\n      getStoredData(): any;\n\n      /**\n       *\n       * @param obj\n       */\n      storeData(obj: any): Express.Request;\n\n      log: RequestLogger;\n    }\n\n    export interface RequestLogger {\n      debug(scope?: any): void;\n\n      info(scope?: any): void;\n\n      trace(scope?: any): void;\n\n      warn(scope?: any): void;\n\n      error(scope?: any): void;\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}