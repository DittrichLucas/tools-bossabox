{"version":3,"sources":["mvc/decorators/method/location.ts"],"names":[],"mappings":"AAEA;;;;;;;;;;;;;;;;;GAiBG;AACH,wBAAgB,QAAQ,CAAC,QAAQ,EAAE,MAAM,GAAG,QAAQ,CAQnD","file":"location.d.ts","sourcesContent":["import {UseAfter} from \"./useAfter\";\n\n/**\n * Sets the response Location HTTP header to the specified path parameter.\n *\n * ```typescript\n *  @Location('/foo/bar')\n *  @Location('http://example.com')\n *  @Location('back')\n *  private myMethod() {\n *\n *  }\n * ```\n *\n * A path value of “back” has a special meaning, it refers to the URL specified in the `Referer` header of the request. If the `Referer` header was not specified, it refers to “/”.\n *\n * @param location\n * @returns {Function}\n * @decorator\n */\nexport function Location(location: string): Function {\n  return <T>(target: Function, targetKey: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> => {\n    return UseAfter((request: any, response: any, next: any) => {\n      response.location(location);\n\n      next();\n    })(target, targetKey, descriptor);\n  };\n}\n"],"sourceRoot":"../../../../src"}