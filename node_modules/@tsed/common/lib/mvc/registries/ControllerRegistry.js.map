{"version":3,"sources":["mvc/registries/ControllerRegistry.ts"],"names":[],"mappings":";;AAAA,iCAA+E;AAC/E,oEAA+D;AAC/D,6DAAwD;AAExD,0CAA0C;AAC7B,QAAA,kBAAkB,GAA2B,oBAAe,CAAC,cAAc,CAAC,iBAAY,CAAC,UAAU,EAAE,uCAAkB,EAAE;IACpI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE,IAAI;IAEf,QAAQ,CAAC,QAA4B,EAAE,MAAM,EAAE,gBAAgB;QAC7D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,6BAAa,CAAC,EAAE;YAC9B,MAAM,CAAC,GAAG,CAAC,6BAAa,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;SAC5C;IACH,CAAC;CACF,CAAC,CAAC;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AACU,QAAA,kBAAkB,GAAG,oBAAe,CAAC,gBAAgB,CAAC,iBAAY,CAAC,MAAM,CAAC,CAAC","file":"ControllerRegistry.js","sourcesContent":["import {TypedProvidersRegistry, ProviderType, GlobalProviders} from \"@tsed/di\";\nimport {ControllerProvider} from \"../class/ControllerProvider\";\nimport {ExpressRouter} from \"../services/ExpressRouter\";\n\n// tslint:disable-next-line: variable-name\nexport const ControllerRegistry: TypedProvidersRegistry = GlobalProviders.createRegistry(ProviderType.CONTROLLER, ControllerProvider, {\n  injectable: false,\n  buildable: true,\n\n  onInvoke(provider: ControllerProvider, locals, designParamTypes) {\n    if (!locals.has(ExpressRouter)) {\n      locals.set(ExpressRouter, provider.router);\n    }\n  }\n});\n/**\n * Add a new controller in the `ProviderRegistry`. This controller will be built when `InjectorService` will be loaded.\n *\n * #### Example\n *\n * ```typescript\n * import {registerController, InjectorService} from \"@tsed/common\";\n *\n * export default class MyController {\n *     constructor(){}\n *     transform() {\n *         return \"test\";\n *     }\n * }\n *\n * registerController({provide: MyController});\n * // or\n * registerController(MyController);\n *\n * const injector = new InjectorService();\n * injector.load();\n *\n * const myController = injector.get<MyController>(MyController);\n * myController.getFoo(); // test\n * ```\n *\n * @param provider Provider configuration.\n */\nexport const registerController = GlobalProviders.createRegisterFn(ProviderType.FILTER);\n"],"sourceRoot":"../../../src"}